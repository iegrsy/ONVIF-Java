buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

plugins {
    id 'java-library'
}

group 'be.teletask.onvif'
version '1.0.0'

sourceCompatibility = 1.8

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //Annotations
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'

    //XML parser
    compile group: 'net.sf.kxml', name: 'kxml2', version: '2.3.0'

    //OkHttp
    compile 'com.squareup.okhttp3:okhttp:3.11.0'

    //OkHttp Digest
    compile 'com.burgstaller:okhttp-digest:1.18'
}

ext {
    bintrayRepo = 'ONVIF-Java'
    bintrayName = 'ONVIF-Java'

    publishedGroupId = 'be.teletask.onvif'
    libraryName = 'ONVIF-Java'
    artifact = 'onvif'

    libraryDescription = 'A Java client library to discover, control and manage ONVIF-supported devices.'

    siteUrl = 'https://github.com/RootSoft/ONVIF-Java'
    gitUrl = 'https://github.com/RootSoft/ONVIF-Java.git'

    libraryVersion = '1.0.2'

    developerId = 'tomasverhelst'
    developerName = 'Tomas Verhelst'
    developerEmail = 'tve@teletask.be'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Properties properties = new Properties()
// properties.load(project.rootProject.file('local.properties').newDataInputStream())

// bintray {
//     user = properties.getProperty("bintray.user")
//     key = properties.getProperty("bintray.apikey")

//     configurations = ['archives']
//     pkg {
//         repo = bintrayRepo
//         name = bintrayName
//         desc = libraryDescription
//         websiteUrl = siteUrl
//         vcsUrl = gitUrl
//         licenses = allLicenses
//         dryRun = false
//         publish = true
//         override = false
//         publicDownloadNumbers = true
//         version {
//             desc = libraryDescription
//         }
//     }
// }
